{"version":3,"file":"static/js/567.791dcfdb.chunk.js","mappings":"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","sources":["webpack://my-app/./src/components/Profile/MyPosts/MyPosts.module.css?831b","webpack://my-app/./src/components/Profile/MyPosts/Post/Post.module.css?87e6","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","webpack://my-app/./src/components/Profile/ProfileInfo/ProfileInfo.module.css?ead2","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileDateForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"block_posts\":\"MyPosts_block_posts__sKsNn\",\"new_post\":\"MyPosts_new_post__M0TkJ\",\"area_post\":\"MyPosts_area_post__BBi-N\",\"send_post\":\"MyPosts_send_post__TkRez\"};","// extracted by mini-css-extract-plugin\nexport default {\"posts_arhiv\":\"Post_posts_arhiv__hEUkJ\"};","import React from \"react\";\r\nimport classes from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n\r\n\r\n    return (\r\n        <div className={classes.posts_arhiv}>\r\n            <img src=\"ava.png\" alt=\"\" />\r\n            {props.message}\r\n            <div>like - {props.likesCount}</div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Post","import React from \"react\";\r\nimport classes from './MyPosts.module.css'\r\nimport Post from './Post/Post'\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/formcontrols/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n\r\n    let postElements = props.post.map(p => <Post key={p.id} message={p.message} id={p.id} likesCount={p.likesCount} />);\r\n\r\n\r\n\r\n    let addNewPost = (values) => {\r\n        props.addPost(values.newPostText)\r\n    }\r\n\r\n    return (\r\n        <div className={classes.block_posts}>\r\n            <AddPostFormRedux onSubmit={addNewPost}/>\r\n            { postElements}\r\n\r\n        </div >\r\n\r\n    )\r\n});\r\n\r\nconst AddPostForm = (props) => {\r\n    return(\r\n        <form className={classes.new_post} onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name={\"newPostText\"} placeholder={\"Enter your post\"} validate={[required, maxLength10]}/>\r\n            <button className={classes.send_post}>Send</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddPostFormRedux = reduxForm({form:\"newPostText\"})(AddPostForm)\r\n\r\nexport default MyPosts","import {addPostActionCreator} from '../../../redux/profile-reducer'\r\nimport MyPosts from './MyPosts';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        post : state.profilePage.post,\r\n        newPostText : state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost : (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect (mapStateToProps, mapDispatchToProps) (MyPosts);\r\n\r\nexport default MyPostsContainer","// extracted by mini-css-extract-plugin\nexport default {\"top_image\":\"ProfileInfo_top_image__Dngbc\",\"avatar\":\"ProfileInfo_avatar__+thFx\",\"about_me\":\"ProfileInfo_about_me__DwLhj\",\"about\":\"ProfileInfo_about__yhz9z\",\"me\":\"ProfileInfo_me__VH7VO\",\"about_hobbies\":\"ProfileInfo_about_hobbies__6Fcbn\",\"status\":\"ProfileInfo_status__I+UnL\"};","import React, {useEffect, useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n      setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n        return (\r\n            <div className={s.status}>\r\n                {!editMode &&\r\n                    <div >\r\n                        <span onDoubleClick={activateEditMode}>{props.status || \"-------\"}</span>\r\n                    </div>\r\n                }\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} ></input>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport {createField, Input, Textarea} from \"../../common/formcontrols/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport style from \"../../common/formcontrols/FormsControls.module.css\";\r\n\r\nconst ProfileDataForm = ({handleSubmit, profile, error}) => {\r\n\r\n    return <form onSubmit={handleSubmit}>\r\n        <table>\r\n            <tbody>\r\n            <tr>\r\n                <td className={classes.about}>Логин:</td>\r\n                <td className={classes.me}>{createField(\"Ваше имя\", \"fullName\", [], Input)}</td>\r\n            </tr>\r\n            <tr>\r\n                <td className={classes.about}>Обо мне:</td>\r\n                <td className={classes.me}>{createField(\"Обо мне\", \"aboutMe\", [], Textarea)}</td>\r\n            </tr>\r\n            <tr>\r\n                <td className={classes.about}>Контакты:</td>\r\n                <td className={classes.me}>\r\n                    {Object.keys(profile.contacts).map(key => {\r\n                        return <div key={key} className={classes.about}>\r\n                            <b>{key}</b>\r\n                            {createField(key, \"contacts.\" + key, [], Input)}\r\n                        </div>\r\n                    })}\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td className={classes.about}>Ищу ли я работу:</td>\r\n                <td className={classes.me}>{createField(\"\", \"lookingForAJob\", [], Input, {type:\"checkbox\"})}</td>\r\n            </tr>\r\n                <tr>\r\n                    <td className={classes.about_hobbies}>Какую работу я ищу:</td>\r\n                    <td className={classes.me}>{createField(\"Опишите какую работу вы ищете\", \"lookingForAJobDescription\", [], Textarea)}</td>\r\n                </tr>\r\n            {error &&\r\n                <div className={style.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n\r\n\r\n            </tbody>\r\n        </table>\r\n        <div><button onClick={() =>{}}>сохранить</button></div>\r\n    </form>\r\n}\r\n\r\nconst ProfileDataFormRedux = reduxForm({\r\n    form:\"profile\"\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataFormRedux;","import React, { useState } from \"react\";\r\nimport Preloader from \"../../common/preloader/preloader\";\r\nimport classes from \"./ProfileInfo.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport userPhoto from \"../../../assets/images/avatar.png\";\r\nimport ProfileDataForm from \"./ProfileDateForm\";\r\n\r\nconst ProfileInfo = ({\r\n  isOwner,\r\n  profile,\r\n  status,\r\n  savePhoto,\r\n  saveProfile,\r\n  updateStatus,\r\n}) => {\r\n  let [editMode, setEditMode] = useState(false);\r\n\r\n  if (!profile) {\r\n    return <Preloader />;\r\n  }\r\n\r\n  const onMainPhotoSelected = (e) => {\r\n    if (e.target.files.length) {\r\n      savePhoto(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const onSubmit = (formData) => {\r\n    saveProfile(formData).then(() => {\r\n      setEditMode(false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.top_image}>\r\n        <img\r\n          src=\"https://p.bigstockphoto.com/GeFvQkBbSLaMdpKXF1Zv_bigstock-Aerial-View-Of-Blue-Lakes-And--227291596.jpg\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className={classes.block_info}>\r\n        <div className={classes.avatar}>\r\n          <img\r\n            src={profile.photos.large || userPhoto}\r\n            alt=\"\"\r\n            className={classes.ava}\r\n          />\r\n        </div>\r\n        <div className={classes.about}>\r\n          Статус:{\" \"}\r\n          <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n        </div>\r\n        <div className={classes.about_me}>\r\n          {editMode ? (\r\n            <ProfileDataForm\r\n              initialValues={profile}\r\n              profile={profile}\r\n              onSubmit={onSubmit}\r\n            />\r\n          ) : (\r\n            <ProfileData\r\n              goToEditMode={() => {\r\n                setEditMode(true);\r\n              }}\r\n              profile={profile}\r\n              isOwner={isOwner}\r\n            />\r\n          )}\r\n\r\n          {isOwner && <input type={\"file\"} onChange={onMainPhotoSelected} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ProfileData = ({ isOwner, goToEditMode, profile }) => {\r\n  return (\r\n    <div>\r\n      <table>\r\n        <tbody>\r\n          <tr>\r\n            <td className={classes.about}>Логин:</td>\r\n            <td className={classes.me}>{profile.fullName}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className={classes.about}>Обо мне:</td>\r\n            <td className={classes.me}>{profile.aboutMe}</td>\r\n          </tr>\r\n          <tr>\r\n            <td className={classes.about}>Контакты:</td>\r\n            <td className={classes.me}>\r\n              {Object.keys(profile.contacts).map((key) => {\r\n                return (\r\n                  <Contact\r\n                    key={key}\r\n                    contactName={key}\r\n                    contactValue={profile.contacts[key]}\r\n                  />\r\n                );\r\n              })}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td className={classes.about}>Ищу ли я работу:</td>\r\n            <td className={classes.me}>\r\n              {profile.lookingForAJob ? \"да\" : \"нет\"}\r\n            </td>\r\n          </tr>\r\n          {profile.lookingForAJob && (\r\n            <tr>\r\n              <td className={classes.about_hobbies}>Какую работу я ищу:</td>\r\n              <td className={classes.me}>\r\n                {profile.lookingForAJobDescription}\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        {isOwner && <button onClick={goToEditMode}>редактировать</button>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Contact = ({ contactName, contactValue }) => {\r\n  return (\r\n    <div>\r\n      <b>{contactName}: </b>\r\n      {contactValue}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n","import React from \"react\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\n\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n\r\n            <ProfileInfo\r\n                isOwner={props.isOwner}\r\n                profile={props.profile}\r\n                updateStatus={props.updateStatus}\r\n                status={props.status}\r\n                savePhoto={props.savePhoto}\r\n                saveProfile={props.saveProfile}\r\n            />\r\n\r\n\r\n            <MyPostsContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\n\r\nimport { withRouter } from \"react-router\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n\r\n    refreshProfile() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getStatus(userId);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId){\r\n            this.refreshProfile()\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         saveProfile={this.props.saveProfile}\r\n                />\r\n\r\n            </div >\r\n        )\r\n    }\r\n\r\n}\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n//\r\n// export default connect(mapStateToProps, { getUserProfile })(WithUrlDataContainerComponent);\r\n\r\nexport default compose(\r\n\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }),\r\n\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer);"],"names":["props","className","classes","src","alt","message","likesCount","maxLength10","maxLengthCreator","MyPosts","React","postElements","post","map","p","id","AddPostFormRedux","onSubmit","values","addPost","newPostText","reduxForm","form","handleSubmit","Field","component","Textarea","name","placeholder","validate","required","connect","state","profilePage","dispatch","addPostActionCreator","useState","editMode","setEditMode","status","setStatus","useEffect","s","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","profile","error","createField","Input","Object","keys","contacts","key","type","style","onClick","ProfileData","isOwner","goToEditMode","fullName","aboutMe","Contact","contactName","contactValue","lookingForAJob","lookingForAJobDescription","savePhoto","saveProfile","photos","large","userPhoto","initialValues","formData","then","target","files","length","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","refreshProfile","prevProps","prevState","snapshot","compose","auth","isAuth","withRouter"],"sourceRoot":""}